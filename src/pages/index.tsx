/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @next/next/no-img-element */
import { type NextPage } from "next";
import Head from "next/head";
import { SignIn } from "@clerk/nextjs";
import { SignInButton, SignOutButton } from "@clerk/nextjs";
import { useUser } from "@clerk/nextjs";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) {
    return null;
  }

  return (
    <div className="flex items-center gap-3">
      <input
        className="border-b border-black bg-transparent p-3 text-sm italic"
        placeholder="What's on your mind today?"
      />
      <Image
        src={user.profileImageUrl}
        width={48}
        height={48}
        alt="profile picture"
        className="h-12 w-12 rounded-full border border-black"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { createdAt, content, author } = props;

  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  dayjs.extend(relativeTime);

  return (
    <div key={author?.id} className="flex gap-4 border-b border-white p-4">
      <Image
        src={author?.profileImageUrl}
        width={48}
        height={48}
        alt="profile picture"
        className="h-12 w-12 rounded-full border border-black"
      />
      <div>
        <div className="flex gap-4">
          <span className="font-bold"> @{author?.username}</span>
          <span className="text-gray-500"> - </span>
          <span className="text-gray-500"> {dayjs(createdAt).fromNow()}</span>
        </div>
        <p>{content}</p>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { data, isLoading: isPostsLoading } = api.posts.getAll.useQuery();

  const { isSignedIn, user } = useUser();

  return (
    <>
      <Head>
        <title>T3 Social App</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <main className="mx-auto min-h-screen w-full bg-black md:max-w-2xl">
        <div className="flex w-full flex-col">
          <div className="flex w-full items-center justify-between border-b bg-white p-4 font-bold text-black ">
            <div>
              <h2>T3 Social App</h2>
              {!user && <SignInButton />}
              <div className="text-sm font-light text-red-500">
                {!!user && <SignOutButton />}
              </div>
              <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
            </div>
            {isSignedIn && <CreatePostWizard />}
          </div>
          {isSignedIn && isPostsLoading && <LoadingPage />}
          {isSignedIn && !isPostsLoading && !data && <div> No posts found</div>}
          {isSignedIn && !isPostsLoading && data && data?.length > 0 && (
            <>
              <h1 className="p-4 text-center text-2xl font-bold">
                Lasts Posts
              </h1>
              <div className="flex flex-col">
                {data?.map((post) => (
                  <PostView {...post} key={post.author?.id} />
                ))}
              </div>
            </>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
